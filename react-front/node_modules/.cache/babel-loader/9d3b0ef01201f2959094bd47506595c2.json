{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactstrap = require(\"reactstrap\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar NotificationAlert = /*#__PURE__*/function (_React$Component) {\n  _inherits(NotificationAlert, _React$Component);\n\n  var _super = _createSuper(NotificationAlert);\n\n  function NotificationAlert(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationAlert);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      notifyTL: [],\n      notifyTC: [],\n      notifyTR: [],\n      notifyBL: [],\n      notifyBC: [],\n      notifyBR: [],\n      notifyID: []\n    };\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_this));\n    _this.notificationAlert = _this.notificationAlert.bind(_assertThisInitialized(_this));\n    _this.refNotification = /*#__PURE__*/_react[\"default\"].createRef();\n    return _this;\n  } // to stop the warning of calling setState of unmounted component\n\n\n  _createClass(NotificationAlert, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      for (var i = 0; i < this.state.notifyID.length; i++) {\n        window.clearTimeout(this.state.notifyID[i]);\n      }\n    }\n  }, {\n    key: \"onDismiss\",\n    value: function onDismiss(nNumber, place, noAnimate) {\n      var notify = [];\n      var sNotify = this.state[\"notify\" + place.toUpperCase()];\n      var dNotify;\n\n      for (var i = 0; i < sNotify.length; i++) {\n        if (sNotify[i].key !== nNumber + \"\") {\n          if (sNotify[i].props.className.indexOf(\"fadeOutUp\") !== -1) {\n            dNotify = /*#__PURE__*/_react[\"default\"].cloneElement(sNotify[i]);\n          } else {\n            if (noAnimate === undefined) {\n              var animation;\n\n              if (place.indexOf(\"b\") !== -1) {\n                animation = sNotify[i].key > nNumber + \"\" ? \" animated moveDown\" : \"\";\n              } else {\n                animation = sNotify[i].key > nNumber + \"\" ? \" animated moveUp\" : \"\";\n              }\n\n              dNotify = /*#__PURE__*/_react[\"default\"].cloneElement(sNotify[i], {\n                className: \"alert-with-icon\" + animation\n              });\n            } else {\n              dNotify = /*#__PURE__*/_react[\"default\"].cloneElement(sNotify[i], {\n                className: \"alert-with-icon\"\n              });\n            }\n          }\n\n          notify.push(dNotify);\n        } else {\n          if (noAnimate === undefined) {\n            dNotify = /*#__PURE__*/_react[\"default\"].cloneElement(sNotify[i], {\n              className: \"alert-with-icon animated fadeOutUp\"\n            });\n            notify.push(dNotify);\n          }\n        }\n      }\n\n      if (noAnimate === undefined) {\n        var id = setTimeout(function () {\n          this.onDismiss(nNumber, place, \"noAnimate\");\n        }.bind(this), 800);\n        this.setState({\n          notifyID: [id].concat(this.state.notifyID)\n        });\n      }\n\n      sNotify = {};\n      sNotify[\"notify\" + place.toUpperCase()] = notify;\n      this.setState(sNotify);\n    }\n  }, {\n    key: \"notificationAlert\",\n    value: function notificationAlert(options) {\n      var _this2 = this;\n\n      var notify = this.state[\"notify\" + options.place.toUpperCase()];\n      var nNumber = notify.length;\n\n      if (notify.length > 0) {\n        if (options.place.indexOf(\"b\") !== -1) {\n          nNumber = parseInt(notify[0].key, 10) + 1;\n        } else {\n          nNumber = parseInt(notify[notify.length - 1].key, 10) + 1;\n        }\n      }\n\n      var toggle;\n\n      if (options.closeButton !== false) {\n        toggle = function toggle() {\n          return _this2.onDismiss(nNumber, options.place);\n        };\n      }\n\n      var notification = /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.Alert, {\n        color: options.type,\n        className: \"alert-with-icon animated fadeInDown\",\n        toggle: toggle,\n        key: nNumber,\n        onClick: this.props.onClick\n      }, options.icon !== undefined && /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n        \"data-notify\": \"icon\",\n        className: options.icon\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n        \"data-notify\": \"message\"\n      }, options.message));\n\n      if (options.place.indexOf(\"b\") !== -1) {\n        notify.unshift(notification);\n      } else {\n        notify.push(notification);\n      }\n\n      var sNotify = {};\n      sNotify[\"notify\" + options.place.toUpperCase()] = notify; // aici pui notify[notify.length-1].key\n\n      if (options.autoDismiss > 0) {\n        var id = setTimeout(function () {\n          this.onDismiss(nNumber, options.place);\n        }.bind(this), options.autoDismiss * 1000 + (notify.length - 1) * 1000);\n        this.setState({\n          notifyID: [id].concat(this.state.notifyID)\n        });\n      }\n\n      this.setState(sNotify);\n    }\n  }, {\n    key: \"showAllNotifications\",\n    value: function showAllNotifications(place) {\n      if (this.state[\"notify\" + place.toUpperCase()].length > 0) {\n        var style = {\n          display: \"inline-block\",\n          margin: \"0px auto\",\n          position: \"fixed\",\n          transition: \"all 0.5s ease-in-out\",\n          zIndex: this.props.zIndex\n        };\n\n        if (place.indexOf(\"t\") !== -1) {\n          style[\"top\"] = \"20px\";\n\n          switch (place) {\n            case \"tl\":\n              style[\"left\"] = \"20px\";\n              break;\n\n            case \"tc\":\n              style[\"left\"] = \"0px\";\n              style[\"right\"] = \"0px\";\n              break;\n\n            case \"tr\":\n              style[\"right\"] = \"20px\";\n              break;\n\n            default:\n              break;\n          }\n        } else {\n          style[\"bottom\"] = \"20px\";\n\n          switch (place) {\n            case \"bl\":\n              style[\"left\"] = \"20px\";\n              break;\n\n            case \"bc\":\n              style[\"left\"] = \"0px\";\n              style[\"right\"] = \"0px\";\n              break;\n\n            case \"br\":\n              style[\"right\"] = \"20px\";\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_reactstrap.Col, {\n          xs: \"11\",\n          sm: \"4\",\n          style: style\n        }, this.state[\"notify\" + place.toUpperCase()].map(function (prop, key) {\n          return prop;\n        })));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        ref: this.refNotification\n      }, this.showAllNotifications(\"tl\"), this.showAllNotifications(\"tc\"), this.showAllNotifications(\"tr\"), this.showAllNotifications(\"bl\"), this.showAllNotifications(\"bc\"), this.showAllNotifications(\"br\")));\n    }\n  }]);\n\n  return NotificationAlert;\n}(_react[\"default\"].Component);\n\nNotificationAlert.defaultProps = {\n  zIndex: 9999,\n  onClick: function onClick() {}\n};\nNotificationAlert.propTypes = {\n  zIndex: _propTypes[\"default\"].number,\n  onClick: _propTypes[\"default\"].func\n};\nvar _default = NotificationAlert;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}